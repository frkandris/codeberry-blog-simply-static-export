<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>język javascript | CodeBerry Blog</title>
	<atom:link href="/blog/pl/tag/jezyk-javascript/feed/" rel="self" type="application/rss+xml" />
	<link>/blog</link>
	<description>Learn programming online</description>
	<lastBuildDate>Thu, 04 Feb 2021 12:29:23 +0000</lastBuildDate>
	<language>pl-PL</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8</generator>
	<item>
		<title>Podstawy JavaScript &#8211; język JavaScript dla początkujących</title>
		<link>/blog/pl/podstawy-javascript/</link>
		
		<dc:creator><![CDATA[blog-admin]]></dc:creator>
		<pubDate>Tue, 15 Sep 2020 12:02:01 +0000</pubDate>
				<category><![CDATA[Języki programowania]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[język javascript]]></category>
		<category><![CDATA[nauka]]></category>
		<category><![CDATA[podstawy JavaScript]]></category>
		<category><![CDATA[programowanie]]></category>
		<guid isPermaLink="false">https://codeberryschool.com/blog/?p=9919</guid>

					<description><![CDATA[W serii „Przewodnik dla początkujących” Szkoły Programowania CodeBerry będziemy odpowiadać na pytania, które możesz mieć odnośnie tego, jaki język programowania wybrać, ile pieniędzy będziesz zarabiać, co możesz zrobić jako programista stron internetowych oraz od czego zacząć. Chcesz nauczyć się programować, online? Przyjdź i wypróbuj nasze pierwsze 25 lekcji za darmo w Szkole Programowania CodeBerry. Języki programowania Tworzenie stron [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><div id="attachment_9794" style="width: 1034px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-9794" loading="lazy" class="wp-image-9794 size-large" src="https://codeberryschool.com/blog/wp-content/uploads/2020/09/javascript-4523100_1920-1024x576.jpg" alt="W artykule przedstawiamy najlepsze kursy JavaScript dostępne w Polsce. Dowiesz także się jaką role odgrywa JavaScript w tworzeniu stron www." width="1024" height="576" srcset="/blog/wp-content/uploads/2020/09/javascript-4523100_1920-1024x576.jpg 1024w, /blog/wp-content/uploads/2020/09/javascript-4523100_1920-300x169.jpg 300w, /blog/wp-content/uploads/2020/09/javascript-4523100_1920-768x432.jpg 768w, /blog/wp-content/uploads/2020/09/javascript-4523100_1920-1536x864.jpg 1536w, /blog/wp-content/uploads/2020/09/javascript-4523100_1920-1080x608.jpg 1080w, /blog/wp-content/uploads/2020/09/javascript-4523100_1920.jpg 1920w" sizes="(max-width: 1024px) 100vw, 1024px" /><p id="caption-attachment-9794" class="wp-caption-text">Image by <a href="https://mangomattermedia.com/" target="_blank" rel="noopener external" data-wpel-link="external">https://mangomattermedia.com/</a></p></div></p>
<p><strong>W serii „Przewodnik dla początkujących” Szkoły Programowania CodeBerry</strong> będziemy odpowiadać na pytania, które możesz mieć odnośnie tego, jaki język programowania wybrać, ile pieniędzy będziesz zarabiać, co możesz zrobić jako programista stron internetowych oraz od czego zacząć.</p>
<p>Chcesz nauczyć się programować, online? Przyjdź i wypróbuj nasze pierwsze <a href="https://orange.codeberryschool.com/auth/signup" data-wpel-link="external" target="_blank" rel="external">25 lekcji za darmo</a> w Szkole Programowania CodeBerry.</p>
<h2><span id="Jezyki_programowania">Języki programowania</span></h2>
<ul>
<li><a href="https://codeberryschool.com/blog/pl/tworzenie-stron-internetowych-poradnik/" data-wpel-link="external" target="_blank" rel="external">Tworzenie stron internetowych – przewodnik dla początkujących</a>,</li>
<li><a href="https://codeberryschool.com/blog/pl/przewodnik-dla-poczatkujacych-po-java/" data-wpel-link="external" target="_blank" rel="external">Przewodnik dla początkujących po języku programowania Java</a></li>
<li><a href="https://codeberryschool.com/blog/pl/programowanie-w-pythonie-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Programowanie w Pythonie – język Python dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/programowanie-c-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Programowanie C++ – przewodnik dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/przewodnik-c-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Przewodnik C# dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/jezyk-php-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Język PHP – programowanie PHP dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/?p=9919&amp;preview=true" data-wpel-link="external" target="_blank" rel="external">Podstawy JavaScript &#8211; język JavaScript dla początkujących</a></li>
</ul>
<h3><b>Wstęp do</b><b> języka JavaScript</b></h3>
<p><span style="font-weight: 400;">JavaScript jest językiem sieciowym. Prawie każda strona, którą odwiedzasz w swojej przeglądarce internetowej, będzie używać go w ten czy inny sposób, aby zapewnić odpowiednie doznania i komfort z użytkowania. Dlatego właśnie znajomość JavaScript jest tak pożądana wśród nowoczesnych programistów. Trudno jest znaleźć dobre zastępstwo dla tak elastycznego języka programowania, jeśli chce się stworzyć niezapomniane doświadczenia użytkowania, oparte na przeglądarce internetowej, zdolne do zaciekawienia klientów czy potencjalnych pracodawców. </span></p>
<p><span style="font-weight: 400;">Chcesz stworzyć stronę internetową dla swojego szybko rozwijającego się biznesu tworzącego zabawne skarpetki dla psów? A co powiesz na doświadczenie VR w przeglądarce &#8211; zobaczyć, jak to jest odwiedzić dom swojej teściowej na Boże Narodzenie? Musisz nauczyć się JavaScript, jeśli chcesz zrealizować ambitne marzenia związane z przeglądarkami, a także wiele więcej.</span></p>
<p><span style="font-weight: 400;">Jeśli coś z tego cię ciekawi (lub po prostu się nudzisz) &#8211; czytaj dalej, aby dowiedzieć się więcej o podstawach JavaScriptu i rozpocznij swoją podróż w kierunku zostania programistycznym ninja.</span></p>
<h3><b>Zmienne w</b><b> JavaScript</b></h3>
<p><span style="font-weight: 400;">Najlepszym miejscem na początek są zmienne. Zmienne są typem danych, w których programiści przechowują informacje &#8211; zwłaszcza takie, których program będzie potrzebować podczas pracy. Są one jak pudełka, do których można wkładać rzeczy. Programista może stworzyć zmienną w kodzie, wypełnić ją czymś (zadeklarować), a następnie uzyskać do niej dostęp w prosty sposób. W ten sposób informacja jest dostępna zawsze wtedy, gdy jest potrzebna.</span></p>
<p><i><span style="font-weight: 400;">Więc, jak mogę stworzyć zmienną w kodzie?</span></i></p>
<p><span style="font-weight: 400;">W ten sposób:</span></p>
<p><span style="font-weight: 400;">var myCoolVariable;</span></p>
<p><i><span style="font-weight: 400;">A co to niby znaczy?!</span></i></p>
<p><span style="font-weight: 400;">Cieszę się, że pytasz! Powyższy wiersz składa się z dwóch części, które łączą się, aby utworzyć zmienną. Podzielmy ją i dokonajmy jej analizy.</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">var</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">W języku JavaScript jest to słowo zastrzeżone. W tym języku jest ich całkiem sporo i wszystkie mają swoje dedykowane zadania. Ten mówi programowi, że masz zamiar utworzyć zmienną.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">myCoolVariable</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Jest to identyfikator zmiennej, jej nazwa. Może to być wszystko, od &#8222;kota&#8221; do &#8222;mojaSuperZmienna3&#8221; (ale lepiej nie nazywać ich w ten sposób!). Identyfikator zmiennej jest używany do odnoszenia się do niej w przyszłości, gdy jest ona potrzebna. Dobrą praktyką jest nadawanie swoim zmiennym nazw, które opisują ich działanie, więc jeśli masz zmienną, która zawiera twój wiek, to prawdopodobnie powinieneś ją nazwać myAge. Rób to konsekwentnie, a twoi koledzy programiści będą Cię szanować i kupować za to różne prezenty! </span></li>
</ul>
</li>
</ul>
<p><i><span style="font-weight: 400;">Dobra, fajnie, ale co dalej?</span></i></p>
<p><span style="font-weight: 400;">Pamiętasz, że zmienne są jak pudełka? Powyższy kod tworzy pudełko, ale jeszcze niczego w nim nie włożyliśmy &#8211; to jest następny krok. Jednak zanim to zrobimy, słowo o typach danych.</span></p>
<p><i><span style="font-weight: 400;">Jakich danych?</span></i></p>
<p><span style="font-weight: 400;">Typy danych są różnymi rodzajami zmiennych, które można wytworzyć, w większości przypadków wszystkie języki programowania je posiadają. Niektóre języki są bardzo ścisłe, praktycznie nakazują Ci określić dokładnie jaki typ zmiennej tworzysz, a następnie musisz trzymać się tego przez cały czas! Na szczęście, JavaScript taki nie jest. Możesz stworzyć zmienną określonego typu w JavaScript, a następnie zmienić ją później w zależności od potrzeb czy własnej chęci, ponieważ wartości i typy zmiennych mogą być zmieniane w dowolnym momencie. Woohoo! Możesz sobie poszaleć.</span></p>
<p><span style="font-weight: 400;">Oto niektóre z typów danych dostępnych dla programistów JavaScript.</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Number</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Number (Liczba) określa zmienną o wartości liczbowej. Ten typ zmiennej może teoretycznie przechowywać wartości od -nieskończoności do +nieskończoności. Może również przechowywać specjalną wartość, NaN, która oznacza 'Not a Number' (Nie Liczba) i zdarza się, że kiedy popełnisz błąd w kodzie, to właśnie taką wartość otrzymasz. Biedny JavaScript.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">String</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">String (Ciąg) definiuje zmienną, która zawiera tekst, jak 'Witaj', 'Żegnaj' lub 'Pokaż mi swoje towary'.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Boolean</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Boolean definiuje zmienną, która może być prawdziwa lub fałszywa. Ten typ zmiennej jest często używany do podejmowania decyzji w kodzie. Czy powinienem stać, czy iść naprzód? Boolean ma dla Ciebie odpowiedź.</span></li>
</ul>
</li>
</ul>
<p><span style="font-weight: 400;">Dostępne są również inne typy danych i jeśli chcesz się im przyjrzeć, możesz </span><a href="https://www.w3schools.com/js/js_datatypes.asp" target="_blank" rel="noopener external" data-wpel-link="external"><span style="font-weight: 400;">kliknąć tutaj</span></a><span style="font-weight: 400;">. </span></p>
<p><i><span style="font-weight: 400;">Nadawanie wartości zmiennym</span></i></p>
<p><span style="font-weight: 400;">Zobaczmy, jak możesz włożyć dane do zmiennych. Poniżej znajduje się jakiś kod, który to robi.</span></p>
<p><span style="font-weight: 400;">myCoolVariable = 10;</span></p>
<p><span style="font-weight: 400;">myCoolVariable = ‘hello’;</span></p>
<p><span style="font-weight: 400;">myCoolVariable = true;</span></p>
<p><span style="font-weight: 400;">Powyższy kod ustawia myCoolVariable trzy razy: raz na typ Number (10), raz na wartość Stringa (&#8222;hello&#8221;), a następnie na wartość boolean (true).</span></p>
<p><i><span style="font-weight: 400;">Tworzenie i ustawianie zmiennej w tym samym czasie</span></i></p>
<p><span style="font-weight: 400;">Możliwe jest również tworzenie i ustawienie wszystkich zmiennych naraz. Robisz to w ten sposób:</span></p>
<p><span style="font-weight: 400;">var myCoolVariable = 10;</span></p>
<p><span style="font-weight: 400;">Tutaj stworzyliśmy myCoolVariable i nadaliśmy mu wartość 10 w jednej i tej samej linii. </span></p>
<p><i><span style="font-weight: 400;">Odnoszenie się do zmiennej w przyszłości</span></i></p>
<p><span style="font-weight: 400;">Tworzenie i ustawianie zmiennych jest świetne, ale prawdziwa moc przychodzi później &#8211; kiedy rzeczywiście ich używasz. Jak to wygląda? To proste! Użyj identyfikatora.</span></p>
<p><span style="font-weight: 400;">var myCoolVariable = 10;</span></p>
<p><span style="font-weight: 400;">var myCoolVariableDouble = myCoolVariable + myCoolVariable;</span></p>
<p><span style="font-weight: 400;">Tutaj tworzymy myCoolVariable i nadajemy mu wartość 10. Następnie tworzymy kolejną zmienną, myCoolVariableDouble i ustawiamy ją na wynik dodawania myCoolVariable do siebie. Tak więc teraz myCoolVariableDouble równa się 20 i mamy dwie zmienne w programie. Dwie! Lepiej biegnij po aparat!</span></p>
<p><i><span style="font-weight: 400;">Dość już o zmiennych</span></i></p>
<p><span style="font-weight: 400;">Zajęliśmy się podstawami zmiennych: ich tworzeniem, ustawianiem i odwoływaniem się do nich. Jednak w JavaScripcie jest o wiele więcej do zaprogramowania i odkrycia. Teraz gdy już znasz podstawy, możemy przejść do większych i lepszych rzeczy. Takich jak instrukcje if.</span></p>
<p><img loading="lazy" class="aligncenter size-large wp-image-9920" src="https://codeberryschool.com/blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-1024x683.jpg" alt="Tak wygląda kod języka JavaScript" width="1024" height="683" srcset="/blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-1024x683.jpg 1024w, /blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-300x200.jpg 300w, /blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-768x512.jpg 768w, /blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-1536x1024.jpg 1536w, /blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920-1080x720.jpg 1080w, /blog/wp-content/uploads/2020/09/cyber-glasses-1938449_1920.jpg 1920w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<h3><b>Instrukcja If</b></h3>
<p><span style="font-weight: 400;">Więc mamy opanowane zmienne, ale jak ich użyć do robienia fajnych i niesamowitych rzeczy? Cóż, jednym ze sposobów jest użycie instrukcji if.</span></p>
<p><span style="font-weight: 400;">Instrukcja if jest sposobem, w jaki programista może wbudować w swój kod logikę decyzyjną. Oznacza to, że możemy powiedzieć naszym programom, aby zrobiły coś w oparciu o pewien warunek. Spójrzmy na przykład.</span></p>
<p><span style="font-weight: 400;">If (10 &gt; 20) {</span></p>
<p><span style="font-weight: 400;">  // Run this code</span></p>
<p><span style="font-weight: 400;">} else {</span></p>
<p><span style="font-weight: 400;">  // Run this code</span></p>
<p><span style="font-weight: 400;">}</span></p>
<table>
<tbody>
<tr>
<td><span style="font-weight: 400;">{} definiują blok kodu. Niektóre narzędzia JavaScript, takie jak instrukcje if, wymagają ich w celu oddzielenia różnych bitów kodu.</span></td>
</tr>
</tbody>
</table>
<p><span style="font-weight: 400;">Rozbijmy to na części pierwsze.</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">if</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">To kolejne zastrzeżone słowo. Wskazuje ono programowi, że następujący kod będzie instrukcją if.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">(10 &gt; 20)</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Ta część jest warunkiem. Program oceni warunek, a następnie na podstawie wyniku wybierze, co należy zrobić. Warunek zawsze podaje wartość typu boolean, tzn. prawdziwą lub fałszywą. Jeśli wyjście warunku jest prawdziwe, to instrukcja if uruchomi blok kodu bezpośrednio za zamykającym się nawiasem warunku. Jeśli oszacuje na wartość false, to zamiast tego zostanie uruchomiony kod w drugim bloku &#8211; co dokładnie stanie się tutaj, ponieważ 10 nie wynosi więcej od 20.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">else</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Jest to kolejne słowo kluczowe JavaScript. Określa ono po prostu kod, który powinien zostać uruchomiony, jeśli warunek zostanie oceniony jako fałszywy. Blok else nie jest wymagany &#8211; jeśli go dodasz, to technicznie tworzysz instrukcję if else.</span></li>
</ul>
</li>
</ul>
<p><span style="font-weight: 400;">Miejmy nadzieję, że teraz jest jasne, dlaczego należy tutaj używać {}. Bez zdefiniowania bloku kodu, nie byłoby jasne dla programu, który kod powinien zostać uruchomiony, jeśli warunek zostanie oceniony jako prawdziwy lub fałszywy.</span></p>
<p><span style="font-weight: 400;">Instrukcje if są jednym z podstawowych elementów składowych złożonych programów. Opanowanie ich jest niezbędne, aby stać się kompetentnym programistą JavaScript.</span></p>
<h3></h3>
<h3><b>Pętle</b></h3>
<p><span style="font-weight: 400;">Kolejnym ważnym narzędziem są pętle. Jak sama nazwa wskazuje, te bity kodu uruchamiają się w kółko, aż do momentu spełnienia określonego warunku. Istnieje kilka różnych rodzajów pętli, ale przyjrzymy się tylko dwóm z nich. Podam linki do dalszej nauki, jeśli będziecie zainteresowani.</span></p>
<p><i><span style="font-weight: 400;">Pętla For</span></i></p>
<p><span style="font-weight: 400;">Najpierw zajmiemy się pętlą for. Oto przykład.</span></p>
<p><span style="font-weight: 400;">var numberOfIterations = 10;</span></p>
<p><span style="font-weight: 400;">for (var i = 0; i &lt; numberOfIterations; i++) {</span></p>
<p><span style="font-weight: 400;">  // do something 10 times</span></p>
<p><span style="font-weight: 400;">}</span></p>
<p><span style="font-weight: 400;">Może to wyglądać trochę dziwnie w porównaniu z innymi rzeczami z tego tekstu, ale staje się naprawdę proste, gdy pozna się podstawy działania pętli. Dlatego teraz przejrzę każdą część kodu z osobna.</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">var numberOfIterations = 10</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Jest to tylko kod do tworzenia i ustawiania zmiennej za jednym razem.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">for (var i = 0; i &lt; numberOfIterations; i++)</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">for</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Kolejne zastrzeżone słowo. To mówi programowi, że masz zamiar napisać pętlę.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">var i = 0</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Tworzenie i ustawianie zmiennej ponownie. Jest to szczególny przypadek, ponieważ tworzymy ją w ramach pętli, dla tej pętli. Oznacza to, że zmienna i będzie istniała tylko przez czas trwania pętli. Gdy tylko zakończy się jej wykonywanie, zostanie ona odrzucona. Na zawsze. Żegnaj, zmienno i.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">i &lt; numberOfIterations</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Ta linia mówi, że pętla ma być wykonana tylko wtedy, gdy zmienna i jest mniejsza od wartości numberOfIterations (10).</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">i++</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Wreszcie, linia ta mówi pętli, że po wykonaniu pojedynczej iteracji, powinna ona zwiększyć wartość i o 1.</span></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><span style="font-weight: 400;">Mam nadzieję, że teraz całkiem łatwo jest zobaczyć, jak działa pętla for. Tworzy ona tymczasową zmienną do śledzenia ilości pętli, które zostały wykonane: (i), następnie definiuje warunek wykonania (tylko gdy i &lt; jakaś wartość), a następnie definiuje, jak ma się ona zwiększać z każdą pętlą (w tym przypadku +1, ale może to być naprawdę wszystko, co chcesz).</span></p>
<p><span style="font-weight: 400;">Najwyraźniej, pętla for jest dobra, gdy wiesz, ile razy chcesz coś uruchomić. Jednak co w przypadku, gdy nie wiesz? Oto nadchodzi czas na pętlę while.</span></p>
<p><i><span style="font-weight: 400;">Pętla While</span></i></p>
<p><span style="font-weight: 400;">Pętla while jest prostsza niż pętla for. Po prostu bierze warunek i wykonuje go, dopóki warunek ten nie jest fałszywy. Oto przykład.</span></p>
<p><span style="font-weight: 400;">var shouldKeepRunning = true;</span></p>
<p><span style="font-weight: 400;">while (shouldKeepRunning) {</span></p>
<p><span style="font-weight: 400;">  // Do some code</span></p>
<p><span style="font-weight: 400;">  shouldKeepRunning = false;</span></p>
<p><span style="font-weight: 400;">}</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">while</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Mówimy programowi, że mamy zamiar napisać pętlę while.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">(shouldKeepRunning)</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">To jest warunek. Pętla będzie działać, gdy wartość parametru shouldKeepRunning jest prawdziwa. To jest to samo co napisanie shouldKeepRunning == true, ale możemy to napisać w ten sposób, jako skrót.</span></li>
</ul>
</li>
</ul>
<table>
<tbody>
<tr>
<td><span style="font-weight: 400;">JavaScript używa == do porównania dwóch wartości, dlatego bo = jest używany do ustawiania wartości. Więc jeśli piszesz if (10 == 20), to naprawdę mówisz &#8222;jeśli 10 jest równe 20, to[&#8230;]&#8221;.</span></td>
</tr>
</tbody>
</table>
<p><span style="font-weight: 400;">Ta pętla uruchomi się tylko raz, ponieważ natychmiast ustawiliśmy shouldKeepRunning na fałszywy przy pierwszej iteracji. Prawdopodobnie nigdy czegoś takiego nie zobaczysz w </span></p>
<p><span style="font-weight: 400;"> swoim kodzie, ale ważne jest, aby upewnić się, że pętla w pewnym momencie się zatrzyma. Nie chcemy powodować globalnej katastrofy przy pomocy nigdy niezatrzymującej się pętli obliczeń!</span></p>
<p><span style="font-weight: 400;">To są jedyne dwie pętle, które tutaj omówimy, ale jeśli chcesz dowiedzieć się więcej &#8211; możesz sprawdzić </span><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration" target="_blank" rel="noopener external" data-wpel-link="external"><span style="font-weight: 400;">ten link</span></a><span style="font-weight: 400;">. </span></p>
<h3><b>Funkcje</b></h3>
<p><span style="font-weight: 400;">Wszystkie narzędzia, jakie do tej pory poznaliśmy, są świetne do pisania małych i sekwencyjnych skryptów &#8211; ale co jeśli chcemy pisać większe programy, które w kółko korzystają z tych samych bitów kodu? Nie chcemy ciągle kopiować i wklejać fragmentów kodu, tylko po to, aby ponownie go wykorzystać. Tu właśnie pojawiają się funkcje.</span></p>
<p><span style="font-weight: 400;">Funkcje są kawałkami kodu wielokrotnego użytku. Oto przykład.</span></p>
<p><span style="font-weight: 400;">function doSomething(argumentOne, argumentTwo) {</span></p>
<p><span style="font-weight: 400;">  // do something here</span></p>
<p><span style="font-weight: 400;">}</span></p>
<p><span style="font-weight: 400;">Przeanalizujmy ten kod:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">function</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Jeszcze jedno słowo kluczowe JavaScript. Określa ono powstanie funkcji.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">doSomething</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Jest to identyfikator funkcji. Tak jak identyfikator zmiennej, pozwala nam na odwołanie się do tej funkcji później, w kodzie.</span></li>
</ul>
</li>
<li style="font-weight: 400;"><span style="font-weight: 400;">(argumentOne, argumentTwo)</span>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Kod w nawiasach jest listą argumentów. Dwie wartości argumentOne i argumentTwo zachowują się jako zmienne wewnątrz funkcji i dlatego mogą być jako takie używane. Za sekundę zobaczymy, jak te zmienne zostaną ustawione.</span></li>
</ul>
</li>
</ul>
<p><span style="font-weight: 400;">Każdy kod zdefiniowany w bloku funkcji może być uruchamiany tyle razy, ile chcesz, po prostu wywołując funkcję. Oto przykład.</span></p>
<p><span style="font-weight: 400;">doSomething(10, 20);</span></p>
<p><span style="font-weight: 400;">Używamy identyfikatora funkcji doSomething, a następnie podajemy dwa argumenty, 10 i 20. Wypełnią one następnie argumenty na liście argumentów funkcji, to jest argumentOne i argumentTwo. Kolejność ma znaczenie, więc argumentOne otrzyma wartość 10, a argumentTwo wartość 20.</span></p>
<p><span style="font-weight: 400;">Funkcje działają tak samo, jak zmienne w tym sensie, że można odnieść się tylko do funkcji w obrębie danego bloku i wszystkich bloków dziecięcych, w których została ona zdefiniowana. Jeśli masz funkcję, która została utworzona np. wewnątrz bloku instrukcji if, to nie możesz jej używać poza tym blokiem.</span></p>
<p><span style="font-weight: 400;">Funkcje są niezwykle ważnymi narzędziami, jeśli chcesz tworzyć złożone i dynamiczne programy &#8211; dlatego ważne jest, aby je ćwiczyć. Więcej informacji można znaleźć </span><a href="https://www.w3schools.com/js/js_functions.asp" target="_blank" rel="noopener external" data-wpel-link="external"><span style="font-weight: 400;">tutaj</span></a><span style="font-weight: 400;">.  </span></p>
<h3><b>Podsumowanie</b></h3>
<p><span style="font-weight: 400;">W tym artykule omówione zostały tylko niektóre z podstaw programowania w języku JavaScript &#8211; pozostało jeszcze sporo do poznania. Programowanie JavaScript jest umiejętnością praktyczną i można się go nauczyć tylko w praktyce. Istnieje wiele usług, które pomogą Ci to zrobić, takich jak CodeAcademy, CodeBerry, CodeSchool, Pluralsight i wiele innych. Mam nadzieję, że te informacje będą dla Was przydatne jako podręczny przewodnik na przyszłość. Powodzenia w karierze programistycznej!</span></p>
<p><strong>W serii „Przewodnik dla początkujących” Szkoły Programowania CodeBerry</strong> będziemy odpowiadać na pytania, które możesz mieć odnośnie tego, jaki język programowania wybrać, ile pieniędzy będziesz zarabiać, co możesz zrobić jako programista stron internetowych oraz od czego zacząć.</p>
<p>Języki programowania</p>
<ul>
<li><a href="https://codeberryschool.com/blog/pl/tworzenie-stron-internetowych-poradnik/" data-wpel-link="external" target="_blank" rel="external">Tworzenie stron internetowych – przewodnik dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/przewodnik-dla-poczatkujacych-po-java/" data-wpel-link="external" target="_blank" rel="external">Przewodnik dla początkujących po języku programowania Java</a></li>
<li><a href="https://codeberryschool.com/blog/pl/programowanie-w-pythonie-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Programowanie w Pythonie – język Python dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/programowanie-c-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Programowanie C++ – przewodnik dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/przewodnik-c-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Przewodnik C# dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/jezyk-php-dla-poczatkujacych/" data-wpel-link="external" target="_blank" rel="external">Język PHP – programowanie PHP dla początkujących</a></li>
<li><a href="https://codeberryschool.com/blog/pl/?p=9919&amp;preview=true" data-wpel-link="external" target="_blank" rel="external">Podstawy JavaScript &#8211; język JavaScript dla początkujących</a></li>
</ul>
<p>Chcesz nauczyć się programować, online? Przyjdź i wypróbuj nasze pierwsze <a href="https://orange.codeberryschool.com/auth/signup" data-wpel-link="external" target="_blank" rel="external">25 lekcji za darmo</a> w Szkole Programowania CodeBerry.</p>
<div class="wp-block-columns">
<div class="wp-block-column is-vertically-aligned-top" style="flex-basis: 100%;">
<div class="wp-block-columns">
<div class="wp-block-column" style="flex-basis: 100%;">
<div class="wp-block-columns are-vertically-aligned-center">
<div class="wp-block-column is-vertically-aligned-center" style="flex-basis: 100%;">
<h2></h2>
<h2 class="has-text-align-center"><span class="has-inline-color" style="color: #ef5350;"><strong>Learn to code and change your career!</strong></span></h2>
<div class="wp-block-spacer" style="height: 40px;" aria-hidden="true"></div>
<div class="wp-block-columns">
<div class="wp-block-column" style="flex-basis: 50%;">
<div class="wp-block-columns are-vertically-aligned-top">
<div class="wp-block-column is-vertically-aligned-top" style="flex-basis: 50%;">
<div class="wp-block-image">
<figure class="aligncenter size-thumbnail is-resized"><img loading="lazy" class="wp-image-12065" src="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon1-150x150.png" sizes="(max-width: 200px) 100vw, 200px" srcset="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon1-150x150.png 150w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon1-440x440.png 440w" alt="" width="200" height="200" /></figure>
</div>
<h4 class="has-text-align-center"><strong>100% ONLINE</strong></h4>
</div>
<div class="wp-block-column is-vertically-aligned-top" style="flex-basis: 50%;">
<div class="wp-block-image">
<figure class="aligncenter size-thumbnail is-resized"><img loading="lazy" class="wp-image-12066" src="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon4-150x150.png" sizes="(max-width: 200px) 100vw, 200px" srcset="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon4-150x150.png 150w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon4-300x300.png 300w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon4-440x440.png 440w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon4.png 512w" alt="" width="200" height="200" /></figure>
</div>
<h4 class="has-text-align-center"><strong>IDEAL FOR BEGINNERS</strong></h4>
</div>
</div>
</div>
<div class="wp-block-column" style="flex-basis: 50%;">
<div class="wp-block-columns are-vertically-aligned-top">
<div class="wp-block-column is-vertically-aligned-top" style="flex-basis: 50%;">
<div class="wp-block-image">
<figure class="aligncenter size-large is-resized"><img loading="lazy" class="wp-image-12067" src="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon3.png" sizes="(max-width: 200px) 100vw, 200px" srcset="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon3.png 512w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon3-300x300.png 300w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon3-150x150.png 150w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon3-440x440.png 440w" alt="" width="200" height="200" /></figure>
</div>
<h4 class="has-text-align-center"><strong>SUPPORTIVE COMMUNITY</strong></h4>
</div>
<div class="wp-block-column is-vertically-aligned-top" style="flex-basis: 50%;">
<div class="wp-block-image">
<figure class="aligncenter size-large is-resized"><img loading="lazy" class="wp-image-12068" src="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon2.png" sizes="(max-width: 200px) 100vw, 200px" srcset="https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon2.png 512w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon2-300x300.png 300w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon2-150x150.png 150w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/web_icon2-440x440.png 440w" alt="" width="200" height="200" /></figure>
</div>
<h4 class="has-text-align-center"><strong>SELF-PACED LEARNING</strong></h4>
</div>
</div>
</div>
</div>
<div class="wp-block-spacer" style="height: 10px;" aria-hidden="true"></div>
<h3 class="has-text-align-center"><span class="has-inline-color" style="color: #20c997;">Not sure if programming is for you? With CodeBerry you’ll like it.</span></h3>
<div class="wp-block-spacer" style="height: 30px;" aria-hidden="true"></div>
<div class="wp-block-buttons aligncenter">
<div class="wp-block-button is-style-fill"><a class="wp-block-button__link has-white-color has-text-color has-background" style="border-radius: 10px; background-color: #ef5350;" href="https://orange.codeberryschool.com/auth/signup" target="_blank" rel="noreferrer noopener external" data-wpel-link="external"><strong>TRY THE FIRST LESSONS FOR FREE</strong></a></div>
</div>
<div class="wp-block-spacer" style="height: 25px;" aria-hidden="true"></div>
<div class="wp-block-image">
<figure class="aligncenter size-large is-resized"><img loading="lazy" class="wp-image-12074" src="https://codeberryschool.com/blog/wp-content/uploads/2021/02/logo_green-1.png" sizes="(max-width: 282px) 100vw, 282px" srcset="https://codeberryschool.com/blog/wp-content/uploads/2021/02/logo_green-1.png 564w, https://codeberryschool.com/blog/wp-content/uploads/2021/02/logo_green-1-300x47.png 300w" alt="" width="282" height="45" /></figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
